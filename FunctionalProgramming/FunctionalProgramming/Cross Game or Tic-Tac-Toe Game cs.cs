//<auto-generated/>
using System;
using System.Collections.Generic;
using System.Text;

namespace FunctionalProgramming
{


	
	
		public class TicTacToeTest
		{

			public static void Tic()
			{

				TicTacToe t = new TicTacToe();

				int x = 0, y = 0;
				do
				{
					//Console.WriteLine(t.player == t.X ? "Player X turn" : "Player O turn");
					Console.WriteLine("Enter x and y places");
					x = int.Parse(Console.ReadLine());
					y = int.Parse(Console.ReadLine());

					t.putSign(x, y);
					Console.WriteLine(t.toString());
					Console.WriteLine("_____________________________");
					t.displayWinner();

				} while (t.isEmpty);
			}
		}

		class TicTacToe
		{
			const int X = 1, O = -1;
			const int EMPTY = 0;

			public int player = X;
			private int[,] board = new int[3, 3];
			public bool isEmpty = false;

			public void putSign(int x, int y)
			{
				if (x < 0 || x > 2 || y < 0 || y > 2)
				{
					Console.WriteLine("Invalid board position");
					return;
				}
				if (board[x, y] != EMPTY)
				{
					Console.WriteLine("Board position occupied");
					return;
				}
				board[x, y] = player;
				player = -player;
			}

			public bool isWin(int player)
			{
				return ((board[0, 0] + board[0, 1] + board[0, 2] == player * 3) ||
						(board[1, 0] + board[1, 1] + board[1, 2] == player * 3) ||
						(board[2, 0] + board[2, 1] + board[2, 2] == player * 3) ||
						(board[0, 0] + board[1, 0] + board[2, 0] == player * 3) ||
						(board[0, 1] + board[1, 1] + board[2, 1] == player * 3) ||
						(board[0, 2] + board[1, 2] + board[2, 2] == player * 3) ||
						(board[0, 0] + board[1, 1] + board[2, 2] == player * 3) ||
						(board[2, 0] + board[1, 1] + board[0, 2] == player * 3));
			}

			public void displayWinner()
			{
				if (isWin(X))
				{
					Console.WriteLine("\n X wins...!!");
					isEmpty = false;
				}
				else if (isWin(O))
				{
					Console.WriteLine("\n O wins...!!");
					isEmpty = false;
				}
				else
				{
					if (!isEmpty)
					{
						Console.WriteLine("its a tie");
					}

				}
			}

			public String toString()
			{
				StringBuilder s = new StringBuilder();
				isEmpty = false;
				for (int i = 0; i < 3; i++)
				{
					for (int j = 0; j < 3; j++)
					{
						switch (board[i, j])
						{
							case X:
								s.Append(" X ");
								break;
							case O:
								s.Append(" O ");
								break;
							case EMPTY:
								s.Append("   ");
								isEmpty = true;
								break;
						}
						if (j < 2)
						{
							s.Append("|");
						}

					}
					if (i < 2)
					{
						s.Append("\n-----------\n");
					}
				}
				return s.ToString();
			}
		}
	}



//            int i = 1;

//            //create 2d array of 3 rows and 3 columns            
//            int rows = 3;
//            int columns = 3;
//            String[,] arr = new String[rows, columns];

//            //calling random;
//            Console.WriteLine("COMPUTER TURNS");
//            int x = Utility.Random1();
//            arr = Switch1(arr, x);
//            Console.WriteLine("YOUR TURNS");
//            // Console.WriteLine("PRESS ANYONE 1 TO 9");
//            int y = Console.Read();
//            arr = Lol2(arr, x);
//            Utility.PrintArray(arr, 3, 3);
//            ////print arr
//            //Utility.PrintArray(arr, 3, 3);

//            //winning  code

//            if (arr[0, 0] == "X" && arr[0, 1] == "X" && arr[0, 2] == "X" || arr[1, 0] == "X" && arr[1, 1] == "X" && arr[1, 2] == "X"
//                    || arr[2, 0] == "X" && arr[2, 1] == "X" && arr[2, 2] == "X" || arr[0, 0] == "X" && arr[0, 1] == "X" && arr[0, 2] == "X" ||
//                    arr[0, 1] == "X" && arr[0, 2] == "X" && arr[0, 1] == "X" || arr[1, 0] == "X" && arr[1, 1] == "X" && arr[1, 2] == "X" ||
//                        arr[2, 0] == "X" && arr[2, 1] == "X" && arr[2, 2] == "X" || arr[0, 0] == "X" && arr[1, 1] == "X" && arr[2, 2] == "X" ||
//                    arr[2, 0] == "X" && arr[1, 1] == "X" && arr[0, 2] == "X")
//                {
//                    Console.WriteLine("Computer win");
//                    Environment.Exit(0);
//                }
//                else if (arr[0, 0] == "O" && arr[0, 1] == "O" && arr[0, 2] == "O" || arr[1, 0] == "O" && arr[1, 1] == "O" && arr[1, 2] == "O"
//                   || arr[2, 0] == "O" && arr[2, 1] == "O" && arr[2, 2] == "O" || arr[0, 0] == "O" && arr[0, 1] == "O" && arr[0, 2] == "O" ||
//                   arr[0, 1] == "O" && arr[0, 2] == "O" && arr[0, 1] == "O" || arr[1, 0] == "O" && arr[1, 1] == "O" && arr[1, 2] == "O" ||
//                       arr[2, 0] == "O" && arr[2, 1] == "O" && arr[2, 2] == "O" || arr[0, 0] == "O" && arr[1, 1] == "O" && arr[2, 2] == "O" ||
//                   arr[2, 0] == "O" && arr[1, 1] == "O" && arr[0, 2] == "O")
//                {
//                    Console.WriteLine("User win");
//                    Environment.Exit(0);
//                }
//                else
//                {





//                    arr = Lol2(arr, y);
//                    // bool tr = String.IsNullOrEmpty(arr(y));


//                    //TicTakTeo tc = new TicTakTeo();



//                }



//            //arr[1, 1] = "x";
//            //Console.WriteLine(x);
//            //Console.WriteLine("enter the number of rows");
//            //int rows= int.Parse(Console.ReadLine());
//            //Console.WriteLine("enter the number of rows");
//            //int columns = int.Parse(Console.ReadLine());
//        }



//        public static String[,] Switch1(String[,] arr, int x)
//        {
//            switch (x)
//            {
//                case 1:
//                    bool t = String.IsNullOrEmpty(arr[0, 0]);
//                    if (t == true)
//                    {
//                        arr[0, 0] = "X";
//                       // Console.WriteLine(1);
//                    }
//                    break;

//                case 2:
//                    bool t1 = String.IsNullOrEmpty(arr[0, 1]);
//                    if (t1 == true)
//                    {
//                        arr[0, 1] = "X";
//                       // Console.WriteLine(2);
//                    }
//                    break;
//                case 3:
//                    bool t2 = String.IsNullOrEmpty(arr[0, 2]);
//                    if (t2 == true)
//                    {
//                        arr[0, 2] = "X";
//                       // Console.WriteLine(3);
//                    }
//                    break;
//                case 4:
//                    bool t3 = String.IsNullOrEmpty(arr[1, 0]);
//                    if (t3 == true)
//                    {
//                        arr[1, 0] = "X";
//                        //Console.WriteLine(4);
//                    }
//                    break;
//                case 5:
//                    bool t4 = String.IsNullOrEmpty(arr[1, 1]);
//                    if (t4 == true)
//                    {
//                        arr[1, 1] = "X";
//                        //Console.WriteLine(5);
//                    }
//                    break;
//                case 6:
//                    bool t5 = String.IsNullOrEmpty(arr[1, 2]);
//                    if (t5 == true)
//                    {
//                        arr[1, 2] = "X";
//                        //Console.WriteLine(6);
//                    }
//                    break;
//                case 7:
//                    bool t6 = String.IsNullOrEmpty(arr[2, 0]);
//                    if (t6 == true)
//                    {
//                        arr[2, 0] = "X";
//                        //Console.WriteLine(7);
//                    }
//                    break;
//                case 8:
//                    bool t7 = String.IsNullOrEmpty(arr[2, 1]);
//                    if (t7 == true)
//                    {
//                        arr[2, 1] = "X";
//                       // Console.WriteLine(8);
//                    }
//                    break;
//                case 9:
//                    bool t8 = String.IsNullOrEmpty(arr[2, 2]);
//                    if (t8 == true)
//                    {
//                        arr[2, 2] = "X";
//                       // Console.WriteLine(9);
//                    }
//                    break;
//                default:
//                    break;

//            }
//            return arr;

//        }
//        public static String[,] Lol2(String[,] arr, int y)
//        {
//            switch (y)
//            {
//                case 1:
//                    bool t = String.IsNullOrEmpty(arr[0, 0]);
//                    if (t == true)
//                    {
//                        arr[0, 0] = "O";
//                       // Console.WriteLine(1);
//                    }
//                    break;

//                case 2:
//                    bool t1 = String.IsNullOrEmpty(arr[0, 1]);
//                    if (t1 == true)
//                    {
//                        arr[0, 1] = "O";
//                       // Console.WriteLine(2);
//                    }
//                    break;
//                case 3:
//                    bool t2 = String.IsNullOrEmpty(arr[0, 2]);
//                    if (t2 == true)
//                    {
//                        arr[0, 2] = "O";
//                       // Console.WriteLine(3);
//                    }
//                    break;
//                case 4:
//                    bool t3 = String.IsNullOrEmpty(arr[1, 0]);
//                    if (t3 == true)
//                    {
//                        arr[1, 0] = "O";
//                       // Console.WriteLine(4);
//                    }
//                    break;
//                case 5:
//                    bool t4 = String.IsNullOrEmpty(arr[1, 1]);
//                    if (t4 == true)
//                    {
//                        arr[1, 1] = "O";
//                      //  Console.WriteLine(5);
//                    }
//                    break;
//                case 6:
//                    bool t5 = String.IsNullOrEmpty(arr[1, 2]);
//                    if (t5 == true)
//                    {
//                        arr[1, 2] = "O";
//                      //  Console.WriteLine(6);
//                    }
//                    break;
//                case 7:
//                    bool t6 = String.IsNullOrEmpty(arr[2, 0]);
//                    if (t6 == true)
//                    {
//                        arr[2, 0] = "O";
//                       // Console.WriteLine(7);
//                    }
//                    break;
//                case 8:
//                    bool t7 = String.IsNullOrEmpty(arr[2, 1]);
//                    if (t7 == true)
//                    {
//                        arr[2, 1] = "O";
//                       // Console.WriteLine(8);
//                    }
//                    break;
//                case 9:
//                    bool t8 = String.IsNullOrEmpty(arr[2, 2]);
//                    if (t8 == true)
//                    {
//                        arr[2, 2] = "O";
//                       // Console.WriteLine(9);
//                    }
//                    break;
//                default:
//                    break;

//            }
//            return arr;
//        }
//    }
//}
